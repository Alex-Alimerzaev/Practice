Скачать картинки товаров из каталога FeBi - https://partsfinder.bilsteingroup.com/

Дано, текстовый файл с номерами, где в каждой строке находится номер.
На выходе должна быть папка с картинками.

Алгоритм следуюший:
1) нормализовать номер из файла, т.е. убрать все посторонние сивмолы, оставив только буквы и цифры. Предварительно проверить, не сушествует ли файл в папке (без учета расширения), если существует, то номер пропускаем
2) пробить нормализованный номер по поиску и распарсить результаты, перейти на нужную карточку. Предварительно сверить на карточке или в результате поиска соответствие пробюиваемого номера с тем, что на строке результатов, или на странице детализации, сравнивать нормализованные номера.
3) Если номер на карточке соответствует, то продолжать обработку карточки и искать в dom-модели картинки. Скачивать только крупные картинки, уменьщенные картинки не качать. 
4) Набор картинок сохранять в папку в виде {нормализованный номер}{_(добавлять нижнее подчеркивание, если несколько картинок)*{номер картинки, начиная с 0}}.{расширение файла}.  Для номера 11089, должны быть картинки 11089.jpg, 11089_.jpg, 11089__.jpg и т.д.
5) Если расшитрения файла нет, то определять по mime типу расширение
6) Если номер не пробился, либо картики нет, то заносить в результирующий файлик номер.
7) После того, как все номера обработаются, сделать пост обработку картинок, уменьшить максимальную сторону до указанной, по умолчанию 2000px, сконвертировать в jpg (если пришел другой файл), и установить качество сжатия 80. Если в резхультате постобработку размер файла не изменится, то оставлять исходный файл.
8) Обработанные файлы складывать в отдельную папку.

Для задачи использовать скрипты, написанные Python с библиотекой selenium как наиболее оптимальные для выполения таких задач, впринципе можно использовать другой язык программирования с аналогичной библиотекой.
На c# также есть Selenium. Для обработки картинок на C# есть ImageProcessor, на питоне это стандартный PIL модуль.
Обратить внимание на то, что не всегда html страница приходит пригодная для парсинга, нужно в большинстве случаев отработка клиентских скриптов.
Так же картинки могут приходить в сжатом виде, поэтому в заголовке запроса указывать, что картинка не требует сжатия (см 'Accept-Encoding': 'identity'), + передавать 'User-Agent' и 'Referer' (прочитать про их назначение) чтобы web-сервер не обнаружил сканирование ресурсов.
Поскольку производитель может поменяться, то учесть что в последствии будут добавлены еще другие производители. Использовать шаблон проектирования "Стратегия", алгоритм сканирования по сути одинаковый, но есть отличия в парсинге результатов. Каждого производителя выносить в отдельный класс, общие методы в базовый или утилитный класс (на свое усмотрение).

Аргументами для скрипта должны быть:
- производитель,
- входной файл с номерами,
- папка для складывания скачанных файлов,
- папка для постобработки файлов (если не указана, то не обрабатываем),
- опции для постобработки, размер максимальной стороны (по умолчанию 2000px), качество сжатия (80), минимальный размер файла для обработки в байтах (0)
- выходной файл для неуспешных пробитий, либо для номеров, где нет картинок если приходит "nofoto", то картинки нет).

В процессе анализа результатов, допускается не пользоваться поиском, а переходить сразу на страницу детализации, если можно однозначно сформировать такой url.